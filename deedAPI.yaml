openapi: 3.0.0

info:
  description: "This is the X-mas MKKP Good-Deed Map Server's REST API"
  version: "0.0.1"
  title: "MKKP Good-Deed Map"
  termsOfService: "https://mkkp.party/"
  contact:
    email: "ketfarkukutya@gmail.com"
  license:
    name: "MIT"
    url: "https://opensource.org/licenses/MIT"

servers:
- url: "https://good-deed.mkkp.party/v1"

tags:
- name: Deeds
  description: "Basic operations on Deeds"

paths:
  /deeds:
    get:
      tags:
      - Deeds
      summary: "Get all deeds"
      description: "This endpoint returns all good-deeds"
      responses:
        200:
          description: "List of deeds"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureCollection'
    post:
      tags:
      - Deeds
      summary: "Add a new deed"
      description: "This endpoint creates a new good-deed with its location and deed description"
      requestBody:
        description: "Deed object"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deed'
      responses:
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deed'
        405:
          description: "Invalid input"
  /deeds/{deedId}:
    get:
      tags:
      - Deeds
      summary: "Find deed by ID"
      description: "Returns a single deed"
      parameters:
      - name: deedId
        in: path
        description: "ID of deed to return"
        required: true
        schema:
          type: integer
      responses:
        200:
          description: "Deed with matching ID"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deed'
        404:
          $ref: '#/components/responses/NotFound'
    put:
      tags:
      - Deeds
      summary: "Update an existing deed"
      parameters:
      - name: deedId
        in: path
        description: "ID of deed to return"
        required: true
        schema:
          type: integer
      requestBody:
        description: "Deed object to update"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deed'
      responses:
        200:
          description: "Updated deed object"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deed'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        405:
          description: "Invalid input"
      security:
      - adminAuth: []
    delete:
      tags:
      - Deeds
      summary: "Delete a deed"
      description: "Deletes a single deed"
      parameters:
      - name: deedId
        in: path
        description: "ID of deed to return"
        required: true
        schema:
          type: integer
      responses:
        204:
          $ref: '#/components/responses/Success'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
      security:
      - adminAuth: []

components:
  securitySchemes:
    adminAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    Success:
      description: "Successful operation"
    NotFound:
      description: "Deed not found"
    Unauthorized:
      description: "Access token is missing or invalid"
  schemas:
    FeatureCollection:
      type: object
      properties:
        type:
          type: string
          example: FeatureCollection
        features:
          type: array
          items:
            $ref: '#/components/schemas/Deed'
    Deed:
      type: object
      properties:
        id:
          type: string
          readOnly: true
